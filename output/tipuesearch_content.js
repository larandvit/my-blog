var tipuesearch = {"pages":[{"title":"Cron Scheduler with Docker Container in CentOS/RHEL 7","text":"Using cron with the official CentOS Docker image requests activating systemd, keeping container running, and opening a Docker container in privileged mode. CentOS Docker Hub image includes the description of the setup which should be done to activate systemd and keep a container going. The missing is information how to install and set up cron. This article provides a summary of steps and a functioning sample of Dockerfile. Some customization is needed to implement your cron project. Dockerfile The Dockerfile can be used as a template to design your file. After line #15, you can add your commands to install any packages. You need to replace line #20 with your time zone. Finally, line #22 shows how to add a scheduled job to crontab file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ROM centos:7 ENV container docker RUN ( cd /lib/systemd/system/sysinit.target.wants/ ; for i in * ; do [ $i == \\ systemd-tmpfiles-setup.service ] || rm -f $i ; done ) ; \\ rm -f /lib/systemd/system/multi-user.target.wants/* ; \\ rm -f /etc/systemd/system/*.wants/* ; \\ rm -f /lib/systemd/system/local-fs.target.wants/* ; \\ rm -f /lib/systemd/system/sockets.target.wants/*udev* ; \\ rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; \\ rm -f /lib/systemd/system/basic.target.wants/* ; \\ rm -f /lib/systemd/system/anaconda.target.wants/* ; VOLUME [ \"/sys/fs/cgroup\" ] RUN yum install -y cronie && yum clean all RUN rm -rf /etc/localtime RUN ln -s /usr/share/zoneinfo/America/Toronto /etc/localtime RUN crontab -l | { cat ; echo \"25 04 * * sun,mon,tue python3 /app/do_maintenance.py\" ; } | crontab - CMD [ \"/usr/sbin/init\" ] Dockerfile logical parts Activating systemd. RUN ( cd /lib/systemd/system/sysinit.target.wants/ ; for i in * ; do [ $i == \\ systemd-tmpfiles-setup.service ] || rm -f $i ; done ) ; \\ rm -f /lib/systemd/system/multi-user.target.wants/* ; \\ rm -f /etc/systemd/system/*.wants/* ; \\ rm -f /lib/systemd/system/local-fs.target.wants/* ; \\ rm -f /lib/systemd/system/sockets.target.wants/*udev* ; \\ rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; \\ rm -f /lib/systemd/system/basic.target.wants/* ; \\ rm -f /lib/systemd/system/anaconda.target.wants/* ; VOLUME [ \"/sys/fs/cgroup\" ] Install cron. RUN yum install -y cronie && yum clean all Set up your time zone. RUN rm -rf /etc/localtime RUN ln -s /usr/share/zoneinfo/America/Toronto /etc/localtime Add a job in crontab file. RUN crontab -l | { cat ; echo \"25 04 * * sun,mon,tue python3 /app/do_maintenance.py\" ; } | crontab - Keep container running. CMD [ \"/usr/sbin/init\" ] Build conatiner The image name is c7-cron and it's designated as local one. docker build --rm -t local/c7-cron . Run container To create and start a container, use the command. docker run --privileged --name = parking â€“v /sys/fs/cgroup:/sys/fs/cgroup:ro -d local/c7-cron To access the container in a terminal, run the command. docker exec -it parking /bin/bash","tags":"Docker","url":"/cron-scheduler-with-docker-container-in-centosrhel-7.html","loc":"/cron-scheduler-with-docker-container-in-centosrhel-7.html"},{"title":"Resize Disk in Oracle VM VirtualBox","text":"Virtualization is flexible in terms of using resources. A virtual machine can be built with minimal assigned resources and later, they can be added when it's needed. Oracle VM VirtualBox allows allocation more space to an existing disk. This procedure is common for all virtualized operation systems. It's similar to replacing your old hard drive with new one which is larger size. Run Oracle VM VirtualBox Manager and open settings of a virtual machine. It can be observed that the disk of the virtual machine is run out of space. Open Virtual Media Manager Select disk to add more space After applying the change, open settings of the virtual machine again to validate it Next steps depend on your operation system. You need to run your virtual machine and consume added space. Follow article to set it up for CentOS/RHEL.","tags":"Virtualization","url":"/resize-disk-in-oracle-vm-virtualbox.html","loc":"/resize-disk-in-oracle-vm-virtualbox.html"},{"title":"Expand Logical Volume in CentOS/RHEL 7","text":"As Linux systems have root file systems on a logical volume, it can be used Logical Volume Management (LVM) to resize the volume. The exercise of logical volume expanding is completed in case of adding an extra disk to a physical system or having a pool of storage in a virtual environment. Run fdisk or gdisk partition tool. gdisk is used if the partition layout is GPT otherwise fdisk has to be used. gdisk will make your system unbootable if you don't have GPT partition. Both tools work identically when a new partiton is created. How to figure out if GPT partition is present in your system? Assiming that sda is device with available space, run gdisk /dev/sda command. This screen shows that your partition is GPT. $ gdisk /dev/sda GPT fdisk (gdisk) version 0.8.10 Partition table scan: MBR: protective BSD: not present APM: not present GPT: present Found valid GPT with protective MBR; using GPT. In case of MBR partition your screen is. $ gdisk /dev/sda GPT fdisk (gdisk) version 0.8.10 Partition table scan: MBR: MBR only BSD: not present APM: not present GPT: not present *************************************************************** Found invalid GPT and valid MBR; converting MBR to GPT format in memory. THIS OPERATION IS POTENTIALLY DESTRUCTIVE! Exit by typing 'q' if you don't want to convert your MBR partitions to GPT format! *************************************************************** Create a new logical volume partition. Enter 8E00 partition code. Command (? for help): n Partition number (6-128, default 6): First sector (31457280-52428766, default = 31457280) or {+-}size{KMGTP}: Last sector (31457280-52428766, default = 52428766) or {+-}size{KMGTP}: Current type is 'Linux filesystem' Hex code or GUID (L to show codes, Enter = 8300): 8E00 Changed type of partition to 'Linux LVM' Apply changes. Command (? for help): w Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING PARTITIONS!! Do you want to proceed? (Y/N): Y OK; writing new GUID partition table (GPT) to /dev/sda. Warning: The kernel is still using the old partition table. The new table will be used at the next reboot. The operation has completed successfully. Notify the operation system about changes in the partition tables. $ partprobe Validate the new created partition. It can be used either fdisk or gdisk partition tool $ fdisk -l /dev/sda WARNING: fdisk GPT support is currently new, and therefore in an experimental phase. Use at your own discretion. Disk /dev/sda: 26.8 GB, 26843545600 bytes, 52428800 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: gpt Disk identifier: 71DD2E79-BD1C-4713-9880-22664C87E57B # Start End Size Type Name 1 2048 2099199 1G Linux filesyste Linux filesystem 2 2099200 16777215 7G Linux LVM Linux LVM 3 16777216 20971519 2G Linux LVM Linux LVM 4 20971520 31457279 5G Linux LVM Linux LVM 5 34 2047 1007K BIOS boot BIOS boot partition 6 31457280 52428766 10G Linux LVM Linux LVM Find out what logical groups/volumes are available. $ lvs LV VG Attr LSize Pool Origin Data% Meta% Move Log Cpy%Sync Convert root centos -wi-ao---- <13.19g swap centos -wi-ao---- 820.00m Our intertest is to add space to the root file system. The logical volume path is centos/root . In case of RHEL, it might be rhel/root . Create a physical volume. $ pvcreate /dev/sda6 WARNING: ext4 signature detected on /dev/sda6 at offset 1080. Wipe it? [y/n]: y Wiping ext4 signature on /dev/sda6. Physical volume \"/dev/sda6\" successfully created. Extend centos volume group. $ vgextend centos /dev/sda6 Volume group \"centos\" successfully extended Figure out exact free space in PE. The field name is Free PE / Size and the value in the sample is 2559 $ vgdisplay --- Volume group --- VG Name centos System ID Format lvm2 Metadata Areas 4 Metadata Sequence No 8 VG Access read/write VG Status resizable MAX LV 0 Cur LV 2 Open LV 2 Max PV 0 Cur PV 4 Act PV 4 VG Size 23.98 GiB PE Size 4.00 MiB Total PE 6140 Alloc PE / Size 3581 / <13.99 GiB Free PE / Size 2559 / <10.00 GiB VG UUID ZPaYGz-7hbZ-2H6y-RS9W-x13x-2K81-pXCsA3 Extend centos/root logical volume $ lvextend -l+2559 centos/root Size of logical volume centos/root changed from <13.19 GiB (3376 extents) to 23.18 GiB (5935 extents). Logical volume centos/root successfully resized. XFS file system may be grown while mounted using the xfs_growfs command. $ xfs_growfs /dev/centos/root meta-data=/dev/mapper/centos-root isize=512 agcount=9, agsize=406016 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=0 spinodes=0 data = bsize=4096 blocks=3457024, imaxpct=25 = sunit=0 swidth=0 blks naming =version 2 bsize=4096 ascii-ci=0 ftype=1 log =internal bsize=4096 blocks=2560, version=2 = sectsz=512 sunit=0 blks, lazy-count=1 realtime =none extsz=4096 blocks=0, rtextents=0 data blocks changed from 3457024 to 6077440","tags":"Linux","url":"/expand-logical-volume-in-centosrhel-7.html","loc":"/expand-logical-volume-in-centosrhel-7.html"},{"title":"Convert MBR Partition into GPT in CentOS/RHEL 7","text":"Master Boot Record (MBR) partitioned disks are replaced with newer GUID Partition Table (GPT) standard but MBR is still used widely as a default format. GPT layout for the partition tables has a lot of benefits comparing with MBR one. Along with supporting significantly larger size of disks, it introduces faster and more stable booting. GPT requests to support Unified Extensible Firmware Interface (UEFI) boot. Switch to root user. $ sudo su - Run GPT partition tool. Assuming that sda disk is bootable and will be converted into GPT. $ gdisk /dev/sda GPT fdisk (gdisk) version 0.8.10 Partition table scan: MBR: MBR only BSD: not present APM: not present GPT: not present *************************************************************** Found invalid GPT and valid MBR; converting MBR to GPT format in memory. THIS OPERATION IS POTENTIALLY DESTRUCTIVE! Exit by typing 'q' if you don't want to convert your MBR partitions to GPT format! *************************************************************** Make sure that there is enough space before the first partition to support a boot partition. 2048 value for the first sector confirms that GPT can be applied to MBR. Command (? for help): p Disk /dev/sda: 52428800 sectors, 25.0 GiB Logical sector size: 512 bytes Disk identifier (GUID): 71DD2E79-BD1C-4713-9880-22664C87E57B Partition table holds up to 128 entries First usable sector is 34, last usable sector is 52428766 Partitions will be aligned on 2048-sector boundaries Total free space is 20973501 sectors (10.0 GiB) Number Start (sector) End (sector) Size Code Name 1 2048 2099199 1024.0 MiB 8300 Linux filesystem 2 2099200 16777215 7.0 GiB 8E00 Linux LVM 3 16777216 20971519 2.0 GiB 8E00 Linux LVM 4 20971520 31457279 5.0 GiB 8E00 Linux LVM Create a new bootable partition. As the first sector, enter 34 and the last sector is 2047 . Partition code is ef02 . Command (? for help): n Partition number (5-128, default 5): First sector (34-52428766, default = 31457280) or {+-}size{KMGTP}: 34 Last sector (34-2047, default = 2047) or {+-}size{KMGTP}: Current type is 'Linux filesystem' Hex code or GUID (L to show codes, Enter = 8300): ef02 Changed type of partition to 'BIOS boot partition' Save changes. Command (? for help): w Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING PARTITIONS!! Do you want to proceed? (Y/N): Y OK; writing new GUID partition table (GPT) to /dev/sda. Warning: The kernel is still using the old partition table. The new table will be used at the next reboot. The operation has completed successfully. Notify the operation system about changes. It eliminates rebooting of the system. $ partprobe Install GRUB on the new bootable partition. $ grub2-install /dev/sda Installing for i386-pc platform. Installation finished. No error reported. Validate the conversion. $ gdisk /dev/sda GPT fdisk (gdisk) version 0.8.10 Partition table scan: MBR: protective BSD: not present APM: not present GPT: present Found valid GPT with protective MBR; using GPT.","tags":"Linux","url":"/convert-mbr-partition-into-gpt-in-centosrhel-7.html","loc":"/convert-mbr-partition-into-gpt-in-centosrhel-7.html"},{"title":"Redirect HTTP to HTTPS in Synology NAS Nginx","text":"Synology DiskStation Manager (DSM) doesn't include GUI based functionality to set up a redirect HTTP web traffic to secured HTTPS version of your web site. The default web server in DSM 6 is Nginx and the configuration of the web server should be adjusted. It can be accomplished making manual changes to the Nginx web server moustache template. Prerequisites SSL certificate is added to Synology NAS. SSH service is enabled. Web Station is installed. Web server is Nginx. Environment Document is based on DSM 6.2.2 operation system Original moustache template server { listen 80 default_server{{#reuseport}} reuseport{{/reuseport}}; listen [::]:80 default_server{{#reuseport}} reuseport{{/reuseport}}; gzip on; {{> /usr/syno/share/nginx/WWW_Main}} location ~ &#94;/$ { rewrite / http://$host:{{DSM.port}}/ redirect; } } server { listen 443 default_server ssl{{#reuseport}} reuseport{{/reuseport}}; listen [::]:443 default_server ssl{{#reuseport}} reuseport{{/reuseport}}; {{#DSM.https.compression}} gzip on; {{/DSM.https.compression}} {{> /usr/syno/share/nginx/WWW_Main}} location ~ &#94;/$ { rewrite / https://$host:{{DSM.ssl.port}}/ redirect; } } Setup Use ssh client to access your Synology NAS with a user which has administrative permission. It can be PuTTY tool in Windows or terminal with ssh command in Unix. Switch to root user sudo su - Back up the current moustache template cp /usr/syno/share/nginx/WWWService.mustache /usr/syno/share/nginx/WWWService.mustache.bak Open the moustache template for editing vi /usr/syno/share/nginx/WWWService.mustache Replace 4 lines in port 80 section {{> /usr/syno/share/nginx/WWW_Main}} location ~ &#94;/$ { rewrite / http://$host:{{DSM.port}}/ redirect; } with those 2 lines server_name _; return 301 https://$host$request_uri; The final content should be server { listen 80 default_server{{#reuseport}} reuseport{{/reuseport}}; listen [::]:80 default_server{{#reuseport}} reuseport{{/reuseport}}; gzip on; server_name _; return 301 https://$host$request_uri; } server { listen 443 default_server ssl{{#reuseport}} reuseport{{/reuseport}}; listen [::]:443 default_server ssl{{#reuseport}} reuseport{{/reuseport}}; {{#DSM.https.compression}} gzip on; {{/DSM.https.compression}} {{> /usr/syno/share/nginx/WWW_Main}} location ~ &#94;/$ { rewrite / https://$host:{{DSM.ssl.port}}/ redirect; } } Restart the Nginx web server to apply the changes synoservicecfg --restart nginx","tags":"Synology NAS","url":"/redirect-http-to-https-in-synology-nas-nginx.html","loc":"/redirect-http-to-https-in-synology-nas-nginx.html"},{"title":"Extract Number in Microsoft Access/Excel","text":"Microsoft Access and Excel don't include any string functions to extract a number from a string. It should be created a custom function to complete this task. Regular Expressions are a good option to deal with manipulation of text data. Microsoft Access and Excel are lacking of support of regular expressions but they allow to utilize third party libraries. A library of our interest is Microsoft VBScript Regular Expressions 5.5 one. Open your Microsoft Access database or Excel spreadsheet, then go to VBA Editor pressing Alt-F11 combination. Microsoft Access Microsoft Excel Create a new module calling context menu on the root node of the project tree. Microsoft Access Microsoft Excel Copy and paste the function below to the new created module. Function ExtractNumber ( textValue ) Dim re As Object Set re = CreateObject ( \"vbscript.RegExp\" ) re . Pattern = \"[&#94;\\d]\" re . Global = True ExtractNumber = re . Replace ( textValue , \"\" ) End Function This code uses late binding to the library. This method is not preferable but it reduces number of steps to implement the solution. Close VBA Editor. Create a table and a query in Microsoft Access and a column of values in Microsoft Excel to test the function. Microsoft Access Microsoft Excel","tags":"Microsoft Office","url":"/extract-number-in-microsoft-accessexcel.html","loc":"/extract-number-in-microsoft-accessexcel.html"},{"title":"Set Up Scanner in CentOS 7","text":"As a scanner software can be used Paperwork . It's open source software which is available in both Windows and Unix. CentOS 7 includes Paperwork scanner software as a part of the distribution repository. Make sure that your scanner driver installed in CentOS. This is a sample of Brother printer/scanner driver installation instructions from the official website. Install Scanner Access Now Easy (SANE) application programming interface that provides standardized access to any raster image scanner hardware. sudo yum install sane-backends Enable SANE connection required for scanning. sudo sh -c \"echo 127.0.0.1 >> /etc/sane.d/saned.conf\" Set up SANE service to start automatically and run the service. sudo systemctl enable saned.socket sudo systemctl start saned.socket Open Application Installer from System Tools menu and search for paperwork in search bar. Install Paperwork. After completion it will be available in Office menu. Run Paperwork and open Setting from menu Validate that Device , Default source , and Resolution populated properly as per your scanner.","tags":"Linux","url":"/set-up-scanner-in-centos-7.html","loc":"/set-up-scanner-in-centos-7.html"},{"title":"Clean Up USB Flash Drive","text":"When a USB flash drive is used in Linux or as an ISO image is recorded to it, USB drive might be is not usable in Windows. diskpart Windows tool can be used to clean up and re-partition USB flash drive. The tool can be run from Windows Command Prompt typing diskpart The first step is to identify an index of our USB drive. Run LIST DISK command Based on size, our flash drive index is 2 and the next step is to select our drive. Run SELECT DISK Now it's time to remove all content from the drive including any partitions. Run CLEAN command After making our flash drive empty, a new primary partition is created. Run CREATE PRIMARY PARTITION command Next step is to format flash drive. A list of file systems is FAT, FAT32, NTFS, exFAT. quick option allows to complete it very fast. Run FORMAT command Final step is to assign a letter to access the flash drive in Windows. Run ASSIGN command Close diskpart tool. Run EXIT","tags":"Windows Tools","url":"/clean-up-usb-flash-drive.html","loc":"/clean-up-usb-flash-drive.html"}]};